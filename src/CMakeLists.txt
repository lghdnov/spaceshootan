include_directories(.)
include_directories(rendering)
include_directories(components)
include_directories(playerlogic)
include_directories(garbage)
include_directories(physics)
include_directories(networking)
include_directories(level)

add_executable(spaceshootan main.cpp
        utils/ecs.h
        utils/logger.h
        rendering/Renderer.cpp
        rendering/Renderer.h
        playerlogic/PlayerController.cpp
        playerlogic/PlayerController.h
        utils/impl.h
        components/PhysicalObject.h
        components/GraphicObject.h
        components/LocalPlayer.h
        components/GarbageMark.h
        garbage/GarbageCleaner.cpp
        garbage/GarbageCleaner.h
        components/Window.h
        components/RotationVelocity.h
        components/PositionVelocity.h
        physics/VelocitySystem.cpp
        physics/VelocitySystem.h
        networking/Networking.h
        networking/NetSystem.cpp
        networking/NetSystem.h
        components/Packet.h
        networking/packet/Connection.cpp
        networking/packet/Connection.h
        networking/NetServer.cpp
        networking/NetClient.cpp
        networking/packet/SetId.cpp
        networking/packet/SetId.h
        components/NetworkingC.h
        networking/packet/Position.cpp
        networking/packet/Position.h
        components/RemotePlayer.h
        components/Id.h
        level/LevelGenerator.cpp
        level/LevelGenerator.h
        physics/GravitationSystem.cpp
        physics/GravitationSystem.h
        components/Mass.h
        rendering/Gui/ConnectionMenu.cpp
        rendering/Gui/ConnectionMenu.h
        components/RenderMethod.h
        playerlogic/ViewController.cpp
        playerlogic/ViewController.h
        physics/CollisionHandler.cpp
        physics/CollisionHandler.h
        components/Health.h
        physics/HealthSystem.cpp
        physics/HealthSystem.h
        components/ExplosionParticle.h
        components/WindowEvent.h
        networking/packet/Shoot.cpp
        networking/packet/Shoot.h
)

target_link_libraries(${PROJECT_NAME} PRIVATE ImGui-SFML::ImGui-SFML)
target_link_libraries(${PROJECT_NAME} PRIVATE sfml-network)
